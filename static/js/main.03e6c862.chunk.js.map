{"version":3,"sources":["components/UI/Card.jsx","components/Expenses/ExpenseFilter.jsx","components/Expenses/ExpenseDate.jsx","components/Expenses/ExpenseItem.jsx","components/Expenses/ExpensesList.jsx","components/Chart/ChartBar.jsx","components/Chart/Chart.jsx","components/Expenses/ExpensesChart.jsx","components/Expenses/Expenses.jsx","components/NewExpense/ExpenseForm.jsx","components/NewExpense/NewExpense.jsx","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","value","setSelected","onChange","event","getYear","target","ExpenseDate","month","date","toLocaleString","year","getFullYear","day","ExpenseItem","title","amount","ExpensesList","filteredData","length","map","el","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","totalMax","max","dataPoints","dataPoint","ExpensesChart","chartDataPoints","expenses","expense","getMonth","Expenses","useState","curYear","setCurYear","data","filter","toString","selectedYear","ExpenseForm","curTitle","setCurTitle","curAmount","setCurAmount","curDate","setCurDate","clearForm","closeForm","onSubmit","preventDefault","expenseData","Date","saveData","type","placeholder","min","step","onClick","NewExpense","addNew","setAddNew","random","getData","Data","App","setExpenses","prevExp","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.03e6c862.chunk.js","sourcesContent":["import \"./Card.css\";\r\n\r\nfunction Card(props) {\r\n  const classes = \"card \" + props.className;\r\n  return <div className={classes}>{props.children}</div>;\r\n}\r\n\r\nexport default Card;\r\n ","import \"./ExpenseFilter.css\";\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const saveYear = (event) => {\r\n    props.getYear(event.target.value);\r\n  };\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select value={props.setSelected} onChange={saveYear}>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import \"./ExpenseDate.css\";\r\n\r\nfunction ExpenseDate(props) {\r\n  let month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  let year = props.date.getFullYear();\r\n  let day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n  );\r\n}\r\nexport default ExpenseDate;\r\n","\r\n\r\nimport \"./ExpenseItem.css\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport Card from \"../UI/Card\";\r\n\r\nfunction ExpenseItem(props) {\r\n  return (\r\n    <Card className=\"expense-item\">\r\n      <ExpenseDate date={props.date} />\r\n      <div className=\"expense-item__description\">\r\n        <h2>{props.title}</h2>\r\n        <div className=\"expense-item__price\">â‚¹ {props.amount}</div>\r\n      </div>\r\n    </Card>\r\n  );\r\n}\r\nexport default ExpenseItem;\r\n","import React from 'react'\r\nimport ExpenseItem from './ExpenseItem';\r\nimport './ExpensesList.css';\r\n\r\nconst ExpensesList = (props) => {\r\n    if (props.filteredData.length === 0) {\r\n        return <h2 className=\"expenses-list__fallback\">No Expenses Found!</h2>;\r\n    }\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n        {\r\n            props.filteredData.map((el) => (\r\n                <ExpenseItem\r\n                key={el.id}\r\n                title={el.title}\r\n                date={el.date}\r\n                amount={el.amount}\r\n                />\r\n            ))\r\n        }\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default ExpensesList;","import React from \"react\";\r\nimport \"./ChartBar.css\";\r\n\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = \"0%\";\r\n  if (props.maxValue > 0)\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import React from 'react'\r\nimport './Chart.css';\r\nimport ChartBar from './ChartBar';\r\n\r\nconst Chart = (props) => {\r\n    const totalMax = Math.max(...props.dataPoints.map(dataPoint => dataPoint.value));\r\n  return (\r\n    <div className=\"chart\">\r\n        {props.dataPoints.map(dataPoint => {\r\n            return <ChartBar key={dataPoint.label} value={dataPoint.value} maxValue={totalMax} label={dataPoint.label}/>\r\n        })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Chart;","import React from 'react'\r\n\r\nimport Chart from '../Chart/Chart';\r\n\r\nconst ExpensesChart = (props) => {\r\n    const chartDataPoints = [\r\n      {\r\n        label: \"Jan\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"Feb\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"Mar\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"Apr\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"May\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"Jun\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"Jul\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"Aug\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"Sep\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"Oct\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"Nov\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"Dec\",\r\n        value: 0,\r\n      },\r\n    ];\r\n    for(const expense of props.expenses){\r\n        const expenseMonth = expense.date.getMonth();\r\n        chartDataPoints[expenseMonth].value += expense.amount;\r\n    }\r\n  return <Chart dataPoints={chartDataPoints}/>\r\n}\r\n\r\nexport default ExpensesChart;","import { useState } from \"react\";\r\nimport \"./Expenses.css\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpenseFilter from \"./ExpenseFilter\";\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\n\r\nfunction Expenses(props) {\r\n  const [curYear, setCurYear] = useState(\"2020\");\r\n  const getYearHandler = (selectedYear) => {\r\n    setCurYear(selectedYear);\r\n  };\r\n  const filteredData = props.data.filter((el) => {\r\n    return el.date.getFullYear().toString() === curYear;\r\n  });\r\n\r\n  \r\n  return (\r\n    <>\r\n      <Card className=\"expenses\">\r\n        <ExpenseFilter setSelected={curYear} getYear={getYearHandler} />\r\n        <ExpensesChart expenses={filteredData}/>\r\n        <ExpensesList filteredData={filteredData}/>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Expenses;\r\n","import \"./ExpenseForm.css\";\r\nimport { useState } from \"react\";\r\n\r\nconst ExpenseForm = (props) => {\r\n  const [curTitle, setCurTitle] = useState(\"\");\r\n  const [curAmount, setCurAmount] = useState(\"\");\r\n  const [curDate, setCurDate] = useState(\"\");\r\n\r\n  const titleHandler = (event) => {\r\n    setCurTitle(event.target.value);\r\n  };\r\n\r\n  const amountHandler = (event) => {\r\n    setCurAmount(event.target.value);\r\n  };\r\n\r\n  const dateHandler = (event) => {\r\n    setCurDate(event.target.value);\r\n  };\r\n\r\n  const clearForm = () => {\r\n    setCurTitle(\"\");\r\n    setCurAmount(\"\");\r\n    setCurDate(\"\");\r\n    props.closeForm();\r\n  };\r\n\r\n  const formHandler = (event) => {\r\n    event.preventDefault();\r\n    let expenseData = {\r\n      title: curTitle,\r\n      amount: +curAmount,\r\n      date: new Date(curDate),\r\n    };\r\n    props.saveData(expenseData);\r\n    clearForm();\r\n  };\r\n\r\n\r\n  return (\r\n    <form onSubmit={formHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input\r\n            type=\"text\"\r\n            value={curTitle}\r\n            placeholder=\"Expense title...\"\r\n            onChange={titleHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            onChange={amountHandler}\r\n            value={curAmount}\r\n            placeholder=\"Expense amount...\"\r\n            type=\"number\"\r\n            min=\"0.00\"\r\n            step=\"0.50\"\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            onChange={dateHandler}\r\n            type=\"date\"\r\n            value={curDate}\r\n            min=\"2019-01-01\"\r\n            max=\"2022-12-31\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button onClick={clearForm}>Cancel</button>\r\n        <button type=\"submit\">Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\nexport default ExpenseForm;\r\n","import './NewExpense.css';\r\nimport ExpenseForm from './ExpenseForm'\r\nimport {useState} from 'react';\r\n\r\nconst NewExpense = (props) => {\r\n   const [addNew, setAddNew] = useState(false);\r\n    const saveDataHandler = (data) => {\r\n        let expenseData = {...data,id:Math.random().toString()}\r\n        props.getData(expenseData);\r\n    };\r\n\r\n    const displayForm = () => {setAddNew(true)};\r\n\r\n    const closeForm = () => {setAddNew(false)};\r\n\r\n    return (\r\n      <div className=\"new-expense\">\r\n        {!addNew ? (\r\n          <button onClick={displayForm}>Add new Expenses</button>\r\n        ) : (\r\n          <ExpenseForm saveData={saveDataHandler} closeForm={closeForm}/>\r\n        )}\r\n      </div>\r\n    );\r\n} \r\nexport default NewExpense;","import { useState } from 'react';\nimport Expenses from './components/Expenses/Expenses';\nimport NewExpense from './components/NewExpense/NewExpense';\n\nconst Data = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  {\n    id: \"e2\",\n    title: \"New TV\",\n    amount: 799.49,\n    date: new Date(2021, 2, 12),\n  },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nfunction App() {\n  const [expenses, setExpenses] = useState(Data);\n\n  const getDataHandler = (data) => {\n    setExpenses((prevExp) => [data, ...prevExp]);\n  };\n\n  return (\n    <div>\n      <NewExpense getData={getDataHandler}/>\n      <Expenses data={expenses}/>\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}